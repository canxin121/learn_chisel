// Generated by CIRCT firtool-1.62.1
module Counter(
  input  clock,
         reset,
  output io_full
);

  reg [7:0] counter;
  always @(posedge clock) begin
    if (reset)
      counter <= 8'h0;
    else if (&counter)
      counter <= 8'h0;
    else
      counter <= counter + 8'h1;
  end // always @(posedge)
  assign io_full = &counter;
endmodule

module Flip(
  input  clock,
         reset,
         io_in,
  output io_out
);

  reg reg_0;
  always @(posedge clock) begin
    if (reset)
      reg_0 <= 1'h0;
    else
      reg_0 <= io_in ^ reg_0;
  end // always @(posedge)
  assign io_out = reg_0;
endmodule

module LedBlink(
  input  clock,
         reset,
  output io_out
);

  wire _counterInst_io_full;
  Counter counterInst (
    .clock   (clock),
    .reset   (reset),
    .io_full (_counterInst_io_full)
  );
  Flip flipInst (
    .clock  (clock),
    .reset  (reset),
    .io_in  (_counterInst_io_full),
    .io_out (io_out)
  );
endmodule

